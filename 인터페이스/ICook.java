package interface01;

// 인터페이스의 조상(extends) 인터페이스만 가능
// 다중상속이 가능
public interface ICook {
	// interface: 추상메서드의 집합
	// 구현된 것이 없는 설계도. 껍데기(모든 멤버가 public)
	// 단적으로 동일한 목적 하에 동일한 기능을 보장하게 하기 위함!
	// 다형성을 극대화하여 코드 수정을 줄이고 프로그램 유지보수성을 높임!

	// 상수 : 인터페이스에서 값을 정해줄테니 함부로 바꾸지 말고 제공해주는 값만 참조해라 (절대적)
	// 추상메소드 : 가이드만 줄테니 추상메소드를 오버라이팅해서 재구현해라. (강제적)
	// 디폴트메소드 : 인터페이스에서 기본적으로 제공해주지만, 맘에 안들면 각자 구현해서 써라. (선택적)
	// 정적메소드 : 인터페이스에서 제공해주는 것으로 무조건 사용 (절대적)
	
	// 추상메서드, 인터페이스의 모든 멤버는 항상 public, abstract 이므로 생략 가능
	void makeRice();
	void makeSoup();
	void makeSalad();
	void makeSource();
}
